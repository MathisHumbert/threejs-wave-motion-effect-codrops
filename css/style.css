:root {
  font-size: 14px;
  --color-text: #424242;
  --color-bg: #190e17;
  --color-link: #999;
  --color-link-hover: #fff;
  --color-primary: #88e7c4;
  --color-secondary: #c5517d;
  --color-description: #3b343a;
}

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

html.lenis {
  height: auto;
}

body {
  color: var(--color-text);
  background-color: var(--color-bg);
  font-family: pragmatica-extended, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.lenis.lenis-smooth {
  scroll-behavior: auto;
}

.webgl {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: -1;
}

a {
  text-decoration: none;
  color: var(--color-link);
  outline: none;
  transition: color 0.3s;
}

/* 
Content
*/
.content {
  --column-gap: 2rem;
  --row-gap: 10vh;
  --mwidth: 400px;
  --columns: 3;
  display: grid;
  max-width: calc(
    var(--mwidth) * var(--columns) + (var(--columns) - 1) * var(--column-gap)
  );
  width: 100%;
  margin: 0 auto;
  grid-template-columns: repeat(
    auto-fill,
    minmax(calc(var(--mwidth) / 2), var(--mwidth))
  );
  grid-column-gap: var(--column-gap);
  grid-row-gap: var(--row-gap);
  justify-content: center;
  padding: 4rem 0 20rem;
  margin-top: 13rem;
}

/* 
Item
*/
.item {
  padding: 2rem;
  align-self: flex-end;
  display: grid;
  grid-template-areas:
    '... ... ...'
    'pretitle pretitle pretitle'
    'title title title'
    '... counter counter'
    '... description ...';
  grid-template-columns: 10% 1fr 1rem;
  grid-template-rows: 3rem auto 1fr 2rem auto;
}

.item__fig {
  position: relative;
  max-width: 100%;
  grid-area: 1 / 2 / 4 / 3;
}

.item__aspect {
  padding-top: var(--aspect);
}

.item__img {
  position: absolute;
  left: 0;
  top: 0;
  max-width: 100%;
  display: none;
}

.item__pretitle {
  grid-area: pretitle;
  font-size: 1rem;
  font-weight: 400;
  font-family: vortice-concept, sans-serif;
  color: var(--color-secondary);
  margin-bottom: 0.75rem;
  pointer-events: none;
}

.item__title {
  grid-area: title;
  font-size: 2.5rem;
  font-weight: 400;
  font-family: vortice-concept, sans-serif;
  -webkit-text-stroke: 1px var(--color-primary);
  -webkit-text-fill-color: transparent;
  pointer-events: none;
}

.item__counter {
  grid-area: counter;
  align-self: flex-end;
  justify-self: flex-end;
  font-size: 3rem;
  font-weight: 400;
  font-family: vortice-concept, sans-serif;
  color: var(--color-primary);
  pointer-events: none;
}

.item__description {
  grid-area: description;
  max-width: 200px;
  font-size: 0.85rem;
  color: var(--color-description);
  pointer-events: none;
}

/* 
Frame
*/
.frame {
  position: fixed;
  top: 40px;
  left: 0;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: space-between;
  padding: 3rem 5vw;
  z-index: 100;
}

@media screen and (min-width: 768px) {
  .frame {
    position: fixed;
    top: 0;
    left: 0;
    width: calc(100% - 3rem);
    padding: 3rem;
    display: grid;
    grid-template-columns: 0% 100% 0%;
    grid-template-rows: auto auto auto;
    grid-template-areas:
      'title demos links'
      '. . .'
      '. . .';
  }
}

.frame__links {
  display: flex;
  gap: 2rem;
  text-decoration: underline;
}

@media screen and (min-width: 768px) {
  .frame__links {
    padding: 0;
    grid-column: -1 / 1;
    grid-area: demos;
    gap: 0;
    text-decoration: none;
  }
}

.frame__links a:first-child {
  margin-right: auto;
}

.frame__links a:not(:first-child) {
  margin-right: 2rem;
}

.frame a:hover {
  color: var(--color-link-hover);
}

.frame__demo {
  margin-bottom: 3rem;
  order: -1;
}

@media screen and (min-width: 768px) {
  .frame__demo {
    margin-bottom: 0;
    grid-area: demos;
    justify-self: center;
  }
}

/* 
Loading
*/
body.loading::before,
body.loading::after {
  content: '';
  position: fixed;
  z-index: 1000;
}

body.loading::before {
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: var(--color-bg);
}

body.loading::after {
  top: 50%;
  left: 50%;
  width: 60px;
  height: 60px;
  margin: -30px 0 0 -30px;
  border-radius: 50%;
  opacity: 0.4;
  background: var(--color-link);
  animation: loaderAnim 0.7s linear infinite alternate forwards;
}

@keyframes loaderAnim {
  to {
    opacity: 1;
    transform: scale3d(0.5, 0.5, 1);
  }
}
